/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
)

// checks if the UpdateApplicationRequestOidcClientMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateApplicationRequestOidcClientMetadata{}

// UpdateApplicationRequestOidcClientMetadata struct for UpdateApplicationRequestOidcClientMetadata
type UpdateApplicationRequestOidcClientMetadata struct {
	RedirectUris []ListApplications200ResponseInnerOidcClientMetadataRedirectUrisInner `json:"redirectUris,omitempty"`
	PostLogoutRedirectUris []string `json:"postLogoutRedirectUris,omitempty"`
	BackchannelLogoutUri *string `json:"backchannelLogoutUri,omitempty"`
	BackchannelLogoutSessionRequired *bool `json:"backchannelLogoutSessionRequired,omitempty"`
	LogoUri *string `json:"logoUri,omitempty"`
}

// NewUpdateApplicationRequestOidcClientMetadata instantiates a new UpdateApplicationRequestOidcClientMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApplicationRequestOidcClientMetadata() *UpdateApplicationRequestOidcClientMetadata {
	this := UpdateApplicationRequestOidcClientMetadata{}
	return &this
}

// NewUpdateApplicationRequestOidcClientMetadataWithDefaults instantiates a new UpdateApplicationRequestOidcClientMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApplicationRequestOidcClientMetadataWithDefaults() *UpdateApplicationRequestOidcClientMetadata {
	this := UpdateApplicationRequestOidcClientMetadata{}
	return &this
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *UpdateApplicationRequestOidcClientMetadata) GetRedirectUris() []ListApplications200ResponseInnerOidcClientMetadataRedirectUrisInner {
	if o == nil || IsNil(o.RedirectUris) {
		var ret []ListApplications200ResponseInnerOidcClientMetadataRedirectUrisInner
		return ret
	}
	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) GetRedirectUrisOk() ([]ListApplications200ResponseInnerOidcClientMetadataRedirectUrisInner, bool) {
	if o == nil || IsNil(o.RedirectUris) {
		return nil, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) HasRedirectUris() bool {
	if o != nil && !IsNil(o.RedirectUris) {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given []ListApplications200ResponseInnerOidcClientMetadataRedirectUrisInner and assigns it to the RedirectUris field.
func (o *UpdateApplicationRequestOidcClientMetadata) SetRedirectUris(v []ListApplications200ResponseInnerOidcClientMetadataRedirectUrisInner) {
	o.RedirectUris = v
}

// GetPostLogoutRedirectUris returns the PostLogoutRedirectUris field value if set, zero value otherwise.
func (o *UpdateApplicationRequestOidcClientMetadata) GetPostLogoutRedirectUris() []string {
	if o == nil || IsNil(o.PostLogoutRedirectUris) {
		var ret []string
		return ret
	}
	return o.PostLogoutRedirectUris
}

// GetPostLogoutRedirectUrisOk returns a tuple with the PostLogoutRedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) GetPostLogoutRedirectUrisOk() ([]string, bool) {
	if o == nil || IsNil(o.PostLogoutRedirectUris) {
		return nil, false
	}
	return o.PostLogoutRedirectUris, true
}

// HasPostLogoutRedirectUris returns a boolean if a field has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) HasPostLogoutRedirectUris() bool {
	if o != nil && !IsNil(o.PostLogoutRedirectUris) {
		return true
	}

	return false
}

// SetPostLogoutRedirectUris gets a reference to the given []string and assigns it to the PostLogoutRedirectUris field.
func (o *UpdateApplicationRequestOidcClientMetadata) SetPostLogoutRedirectUris(v []string) {
	o.PostLogoutRedirectUris = v
}

// GetBackchannelLogoutUri returns the BackchannelLogoutUri field value if set, zero value otherwise.
func (o *UpdateApplicationRequestOidcClientMetadata) GetBackchannelLogoutUri() string {
	if o == nil || IsNil(o.BackchannelLogoutUri) {
		var ret string
		return ret
	}
	return *o.BackchannelLogoutUri
}

// GetBackchannelLogoutUriOk returns a tuple with the BackchannelLogoutUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) GetBackchannelLogoutUriOk() (*string, bool) {
	if o == nil || IsNil(o.BackchannelLogoutUri) {
		return nil, false
	}
	return o.BackchannelLogoutUri, true
}

// HasBackchannelLogoutUri returns a boolean if a field has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) HasBackchannelLogoutUri() bool {
	if o != nil && !IsNil(o.BackchannelLogoutUri) {
		return true
	}

	return false
}

// SetBackchannelLogoutUri gets a reference to the given string and assigns it to the BackchannelLogoutUri field.
func (o *UpdateApplicationRequestOidcClientMetadata) SetBackchannelLogoutUri(v string) {
	o.BackchannelLogoutUri = &v
}

// GetBackchannelLogoutSessionRequired returns the BackchannelLogoutSessionRequired field value if set, zero value otherwise.
func (o *UpdateApplicationRequestOidcClientMetadata) GetBackchannelLogoutSessionRequired() bool {
	if o == nil || IsNil(o.BackchannelLogoutSessionRequired) {
		var ret bool
		return ret
	}
	return *o.BackchannelLogoutSessionRequired
}

// GetBackchannelLogoutSessionRequiredOk returns a tuple with the BackchannelLogoutSessionRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) GetBackchannelLogoutSessionRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.BackchannelLogoutSessionRequired) {
		return nil, false
	}
	return o.BackchannelLogoutSessionRequired, true
}

// HasBackchannelLogoutSessionRequired returns a boolean if a field has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) HasBackchannelLogoutSessionRequired() bool {
	if o != nil && !IsNil(o.BackchannelLogoutSessionRequired) {
		return true
	}

	return false
}

// SetBackchannelLogoutSessionRequired gets a reference to the given bool and assigns it to the BackchannelLogoutSessionRequired field.
func (o *UpdateApplicationRequestOidcClientMetadata) SetBackchannelLogoutSessionRequired(v bool) {
	o.BackchannelLogoutSessionRequired = &v
}

// GetLogoUri returns the LogoUri field value if set, zero value otherwise.
func (o *UpdateApplicationRequestOidcClientMetadata) GetLogoUri() string {
	if o == nil || IsNil(o.LogoUri) {
		var ret string
		return ret
	}
	return *o.LogoUri
}

// GetLogoUriOk returns a tuple with the LogoUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) GetLogoUriOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUri) {
		return nil, false
	}
	return o.LogoUri, true
}

// HasLogoUri returns a boolean if a field has been set.
func (o *UpdateApplicationRequestOidcClientMetadata) HasLogoUri() bool {
	if o != nil && !IsNil(o.LogoUri) {
		return true
	}

	return false
}

// SetLogoUri gets a reference to the given string and assigns it to the LogoUri field.
func (o *UpdateApplicationRequestOidcClientMetadata) SetLogoUri(v string) {
	o.LogoUri = &v
}

func (o UpdateApplicationRequestOidcClientMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateApplicationRequestOidcClientMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RedirectUris) {
		toSerialize["redirectUris"] = o.RedirectUris
	}
	if !IsNil(o.PostLogoutRedirectUris) {
		toSerialize["postLogoutRedirectUris"] = o.PostLogoutRedirectUris
	}
	if !IsNil(o.BackchannelLogoutUri) {
		toSerialize["backchannelLogoutUri"] = o.BackchannelLogoutUri
	}
	if !IsNil(o.BackchannelLogoutSessionRequired) {
		toSerialize["backchannelLogoutSessionRequired"] = o.BackchannelLogoutSessionRequired
	}
	if !IsNil(o.LogoUri) {
		toSerialize["logoUri"] = o.LogoUri
	}
	return toSerialize, nil
}

type NullableUpdateApplicationRequestOidcClientMetadata struct {
	value *UpdateApplicationRequestOidcClientMetadata
	isSet bool
}

func (v NullableUpdateApplicationRequestOidcClientMetadata) Get() *UpdateApplicationRequestOidcClientMetadata {
	return v.value
}

func (v *NullableUpdateApplicationRequestOidcClientMetadata) Set(val *UpdateApplicationRequestOidcClientMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApplicationRequestOidcClientMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApplicationRequestOidcClientMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApplicationRequestOidcClientMetadata(val *UpdateApplicationRequestOidcClientMetadata) *NullableUpdateApplicationRequestOidcClientMetadata {
	return &NullableUpdateApplicationRequestOidcClientMetadata{value: val, isSet: true}
}

func (v NullableUpdateApplicationRequestOidcClientMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApplicationRequestOidcClientMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


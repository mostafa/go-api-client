/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"fmt"
)

// ApiInteractionVerificationVerificationCodePostRequest - struct for ApiInteractionVerificationVerificationCodePostRequest
type ApiInteractionVerificationVerificationCodePostRequest struct {
	ApiInteractionVerificationVerificationCodePostRequestOneOf *ApiInteractionVerificationVerificationCodePostRequestOneOf
	ApiInteractionVerificationVerificationCodePostRequestOneOf1 *ApiInteractionVerificationVerificationCodePostRequestOneOf1
}

// ApiInteractionVerificationVerificationCodePostRequestOneOfAsApiInteractionVerificationVerificationCodePostRequest is a convenience function that returns ApiInteractionVerificationVerificationCodePostRequestOneOf wrapped in ApiInteractionVerificationVerificationCodePostRequest
func ApiInteractionVerificationVerificationCodePostRequestOneOfAsApiInteractionVerificationVerificationCodePostRequest(v *ApiInteractionVerificationVerificationCodePostRequestOneOf) ApiInteractionVerificationVerificationCodePostRequest {
	return ApiInteractionVerificationVerificationCodePostRequest{
		ApiInteractionVerificationVerificationCodePostRequestOneOf: v,
	}
}

// ApiInteractionVerificationVerificationCodePostRequestOneOf1AsApiInteractionVerificationVerificationCodePostRequest is a convenience function that returns ApiInteractionVerificationVerificationCodePostRequestOneOf1 wrapped in ApiInteractionVerificationVerificationCodePostRequest
func ApiInteractionVerificationVerificationCodePostRequestOneOf1AsApiInteractionVerificationVerificationCodePostRequest(v *ApiInteractionVerificationVerificationCodePostRequestOneOf1) ApiInteractionVerificationVerificationCodePostRequest {
	return ApiInteractionVerificationVerificationCodePostRequest{
		ApiInteractionVerificationVerificationCodePostRequestOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApiInteractionVerificationVerificationCodePostRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiInteractionVerificationVerificationCodePostRequestOneOf
	err = newStrictDecoder(data).Decode(&dst.ApiInteractionVerificationVerificationCodePostRequestOneOf)
	if err == nil {
		jsonApiInteractionVerificationVerificationCodePostRequestOneOf, _ := json.Marshal(dst.ApiInteractionVerificationVerificationCodePostRequestOneOf)
		if string(jsonApiInteractionVerificationVerificationCodePostRequestOneOf) == "{}" { // empty struct
			dst.ApiInteractionVerificationVerificationCodePostRequestOneOf = nil
		} else {
			match++
		}
	} else {
		dst.ApiInteractionVerificationVerificationCodePostRequestOneOf = nil
	}

	// try to unmarshal data into ApiInteractionVerificationVerificationCodePostRequestOneOf1
	err = newStrictDecoder(data).Decode(&dst.ApiInteractionVerificationVerificationCodePostRequestOneOf1)
	if err == nil {
		jsonApiInteractionVerificationVerificationCodePostRequestOneOf1, _ := json.Marshal(dst.ApiInteractionVerificationVerificationCodePostRequestOneOf1)
		if string(jsonApiInteractionVerificationVerificationCodePostRequestOneOf1) == "{}" { // empty struct
			dst.ApiInteractionVerificationVerificationCodePostRequestOneOf1 = nil
		} else {
			match++
		}
	} else {
		dst.ApiInteractionVerificationVerificationCodePostRequestOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiInteractionVerificationVerificationCodePostRequestOneOf = nil
		dst.ApiInteractionVerificationVerificationCodePostRequestOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApiInteractionVerificationVerificationCodePostRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApiInteractionVerificationVerificationCodePostRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApiInteractionVerificationVerificationCodePostRequest) MarshalJSON() ([]byte, error) {
	if src.ApiInteractionVerificationVerificationCodePostRequestOneOf != nil {
		return json.Marshal(&src.ApiInteractionVerificationVerificationCodePostRequestOneOf)
	}

	if src.ApiInteractionVerificationVerificationCodePostRequestOneOf1 != nil {
		return json.Marshal(&src.ApiInteractionVerificationVerificationCodePostRequestOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApiInteractionVerificationVerificationCodePostRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiInteractionVerificationVerificationCodePostRequestOneOf != nil {
		return obj.ApiInteractionVerificationVerificationCodePostRequestOneOf
	}

	if obj.ApiInteractionVerificationVerificationCodePostRequestOneOf1 != nil {
		return obj.ApiInteractionVerificationVerificationCodePostRequestOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableApiInteractionVerificationVerificationCodePostRequest struct {
	value *ApiInteractionVerificationVerificationCodePostRequest
	isSet bool
}

func (v NullableApiInteractionVerificationVerificationCodePostRequest) Get() *ApiInteractionVerificationVerificationCodePostRequest {
	return v.value
}

func (v *NullableApiInteractionVerificationVerificationCodePostRequest) Set(val *ApiInteractionVerificationVerificationCodePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiInteractionVerificationVerificationCodePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiInteractionVerificationVerificationCodePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiInteractionVerificationVerificationCodePostRequest(val *ApiInteractionVerificationVerificationCodePostRequest) *NullableApiInteractionVerificationVerificationCodePostRequest {
	return &NullableApiInteractionVerificationVerificationCodePostRequest{value: val, isSet: true}
}

func (v NullableApiInteractionVerificationVerificationCodePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiInteractionVerificationVerificationCodePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


